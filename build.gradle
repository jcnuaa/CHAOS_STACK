buildscript {
	ext {
		springBootVersion = '1.4.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'


war {
	baseName = 'chaosstack'
	version = '0.0.1-SNAPSHOT'
	manifest {
        attributes 'Implementation-Title': 'Chaos Stack', 'Implementation-Version': version
        attributes 'Main-Class': 'org.springframework.boot.loader.WarLauncher'
        attributes 'Start-Class': 'com.inria.spirals.mgonzale.Application'
    }
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
    compile.exclude module: 'undertow-websockets-jsr'
    
	providedRuntime
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-websocket')
	compile group: 'org.pacesys', name: 'openstack4j', version: '3.0.0'
  	compile("org.springframework.boot:spring-boot-starter-web:1.4.2.RELEASE")
  	compile("org.springframework.boot:spring-boot-starter-undertow:1.4.2.RELEASE")
 	compile("org.springframework.boot:spring-boot-starter-actuator")
  	testCompile('org.springframework.boot:spring-boot-starter-test')
  		
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.2'
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

